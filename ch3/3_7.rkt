#lang racket

(define (make-account balance pw)
  (define (withdraw amount)
    (if (and (> amount 0) (>= balance amount))
        (begin (set! balance (- balance amount))
               balance)
        (error "Invalid amount" amount)))
  (define (deposit amount)
    (if (> amount 0)
        (begin (set! balance (+ balance amount))
               balance)
        (error "Invalid amount" amount)))
  (define (dispatch m p)
    (if (eq? p pw)
        (cond ((eq? m 'withdraw) withdraw)
              ((eq? m 'deposit) deposit)
              (else (error "Invalid command" m)))
        (lambda (amount) "Invalid password")))
  dispatch)

(define (make-joint acc oldp newp)
  (lambda (m p)
    (if (eq? p newp)
        (acc m oldp)
        (lambda (amount) "Invalid joint password"))))

(define peter-acc (make-account 100 'open-sesame))
(define paul-acc (make-joint peter-acc 'open-sesame 'rosebud))
((paul-acc 'withdraw 'rosebud) 20)
((peter-acc 'withdraw 'open-sesame) 10)
